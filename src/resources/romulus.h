////////////////////////////////////////////////////////////////////////////////////////
//                                                                                    //
// FontAsCode exporter v1.0 - Font data exported as an array of bytes                 //
//                                                                                    //
// more info and bugs-report:  github.com/raysan5/raylib                              //
// feedback and support:       ray[at]raylib.com                                      //
//                                                                                    //
// Copyright (c) 2018-2023 Ramon Santamaria (@raysan5)                                //
//                                                                                    //
// ---------------------------------------------------------------------------------- //
//                                                                                    //
// TODO: Fill the information and license of the exported font here:                  //
//                                                                                    //
// Font name:    ....                                                                 //
// Font creator: ....                                                                 //
// Font LICENSE: ....                                                                 //
//                                                                                    //
////////////////////////////////////////////////////////////////////////////////////////

#define COMPRESSED_DATA_SIZE_FONT_ROMULUS2 1047

// Font image pixels data compressed (DEFLATE)
// NOTE: Original pixel data simplified to GRAYSCALE
static unsigned char fontData_Romulus[COMPRESSED_DATA_SIZE_FONT_ROMULUS2] = { 0xed,
    0x9d, 0x51, 0x72, 0xa3, 0x30, 0x10, 0x44, 0xb9, 0xff, 0xa5, 0xbd, 0x5f, 0xa9, 0x4a, 0xb9, 0x36, 0xd0, 0xdd, 0xd3, 0x52,
    0x0c, 0x79, 0xef, 0x67, 0xb3, 0x36, 0x18, 0xd0, 0x68, 0x24, 0xa6, 0x67, 0x04, 0x07, 0x00, 0xc0, 0x06, 0x5e, 0xaf, 0xd7,
    0x6b, 0xc7, 0x31, 0xbe, 0x8e, 0xf3, 0xfd, 0x6f, 0xe8, 0xb5, 0xe5, 0x7b, 0xbb, 0x5e, 0xb5, 0xf9, 0xd7, 0x67, 0xdf, 0x79,
    0xff, 0xfc, 0xac, 0x9f, 0xfc, 0xb4, 0x9d, 0x73, 0xec, 0x9d, 0x7d, 0xf0, 0xec, 0xd8, 0x67, 0xd7, 0x7c, 0xd5, 0x6e, 0xea,
    0x77, 0x67, 0xbf, 0xb9, 0xdb, 0xfe, 0xef, 0xdf, 0x9d, 0xfd, 0x3b, 0xe9, 0x5b, 0xce, 0xf7, 0x4a, 0xdb, 0xaf, 0xb2, 0xbd,
    0x7a, 0x5e, 0x4a, 0x3b, 0xaa, 0x7d, 0xa7, 0x79, 0x0d, 0xef, 0x7f, 0xff, 0xcf, 0xb7, 0xcf, 0xfa, 0xcd, 0xd9, 0x39, 0xa6,
    0xf6, 0x55, 0xda, 0xe1, 0xcc, 0xff, 0xdb, 0xf6, 0x4f, 0xfa, 0xe1, 0xd5, 0x79, 0x3a, 0x7e, 0xde, 0x9a, 0xff, 0xd4, 0xfd,
    0xdd, 0xf1, 0xdf, 0x3d, 0x96, 0xda, 0x97, 0x95, 0x76, 0x57, 0xfa, 0x6e, 0xdb, 0xf6, 0x4a, 0x5f, 0x9f, 0xb6, 0x8d, 0xea,
    0x0f, 0x6d, 0xfb, 0x5f, 0xf9, 0xbf, 0xd2, 0x27, 0xcf, 0x7c, 0x43, 0x19, 0xbf, 0x1d, 0xff, 0x4f, 0xae, 0x53, 0xed, 0x1f,
    0xae, 0x9d, 0x14, 0x5b, 0xb9, 0xe7, 0xbf, 0xa2, 0x4f, 0x4f, 0xfc, 0xff, 0x27, 0x9f, 0x53, 0xc6, 0x2e, 0xf7, 0x7e, 0xbe,
    0x69, 0x7f, 0xf7, 0x58, 0xd3, 0xed, 0x9d, 0x73, 0x70, 0xb6, 0xfb, 0xed, 0xf1, 0xff, 0xac, 0x2f, 0xaa, 0xf7, 0x2d, 0xca,
    0x7d, 0xc2, 0xc4, 0xfe, 0x93, 0x31, 0x21, 0x69, 0x27, 0x25, 0x2e, 0xb8, 0xf2, 0xe3, 0x1d, 0xf7, 0xff, 0x77, 0x8b, 0xfd,
    0xdb, 0xf1, 0x3f, 0xda, 0x01, 0x5a, 0x15, 0x00, 0x00, 0x00, 0xc0, 0x93, 0xf3, 0x3c, 0x6e, 0xac, 0x31, 0x89, 0x51, 0x26,
    0xfa, 0x44, 0x12, 0x97, 0x3a, 0x9a, 0x8e, 0xa3, 0x69, 0x25, 0xed, 0x72, 0xb5, 0x8d, 0xdb, 0xae, 0xea, 0xfe, 0x2d, 0x7d,
    0x51, 0xd9, 0x76, 0x92, 0x23, 0x72, 0xf2, 0x79, 0xa9, 0x16, 0x9f, 0xc4, 0x8c, 0x8e, 0x7e, 0x3b, 0xc9, 0x63, 0x4d, 0xf4,
    0x22, 0xe7, 0xba, 0xa7, 0xda, 0xf3, 0x34, 0xdf, 0x35, 0xc9, 0x33, 0x26, 0xbe, 0x36, 0xd1, 0x2f, 0x57, 0xdb, 0xdf, 0xc9,
    0x83, 0xa6, 0x5a, 0xa8, 0x33, 0xfe, 0x2b, 0xdf, 0x39, 0x39, 0x0f, 0xb5, 0x26, 0xa0, 0x71, 0x3d, 0xae, 0xc6, 0xeb, 0xe4,
    0xab, 0x27, 0x63, 0xf4, 0x44, 0x93, 0x76, 0xf5, 0xbf, 0xd6, 0xfc, 0x9a, 0xea, 0xd4, 0xad, 0xfc, 0x96, 0x5b, 0x23, 0xe1,
    0xea, 0xe8, 0x49, 0xbe, 0x70, 0x95, 0xff, 0x37, 0xf2, 0x45, 0xa9, 0xff, 0xef, 0xb4, 0xbf, 0x7a, 0xbc, 0x55, 0xf3, 0xbf,
    0xd3, 0xf7, 0x77, 0xda, 0x7f, 0xf5, 0xfc, 0x9f, 0xe4, 0x26, 0x9c, 0xb1, 0xa6, 0xf1, 0x9b, 0x69, 0x9e, 0x67, 0x9a, 0xc3,
    0x71, 0xc7, 0x59, 0xb5, 0x9e, 0x27, 0x99, 0xff, 0xda, 0xf7, 0xff, 0xe8, 0xf0, 0xfd, 0xd8, 0x12, 0x9e, 0x9b, 0x83, 0x71,
    0xe3, 0x67, 0x00, 0x00, 0x00, 0x80, 0xa7, 0xe4, 0x80, 0x92, 0x9a, 0x3c, 0x55, 0x07, 0x53, 0xd6, 0x03, 0xa9, 0xf1, 0xd3,
    0xd9, 0xb5, 0x28, 0xe7, 0xef, 0xea, 0x76, 0xab, 0xe2, 0xba, 0x49, 0x5e, 0x69, 0x12, 0x07, 0x36, 0xf2, 0x11, 0x89, 0xc6,
    0xd7, 0xfa, 0xcd, 0xab, 0xbe, 0x7a, 0x04, 0x6b, 0x6c, 0x3e, 0x31, 0xaf, 0x73, 0xb5, 0xa6, 0x66, 0x55, 0xfd, 0xfb, 0x0e,
    0xfb, 0x27, 0x5a, 0xcf, 0x59, 0x9c, 0xa6, 0xe8, 0x4d, 0x77, 0xb1, 0xbf, 0xab, 0xb7, 0xb5, 0x6c, 0x9b, 0x8e, 0x7d, 0xa9,
    0x76, 0x3f, 0xc9, 0x4d, 0xa6, 0xeb, 0x00, 0x53, 0xfb, 0xaf, 0xd8, 0xbf, 0xa5, 0xb7, 0x36, 0xfc, 0x7f, 0xf7, 0xf8, 0x3f,
    0xf1, 0xff, 0xa9, 0xae, 0xbb, 0x32, 0x8f, 0xb5, 0x22, 0x8f, 0x73, 0x17, 0xfb, 0x37, 0xda, 0x36, 0x59, 0xdf, 0xd6, 0xcc,
    0x51, 0xee, 0xb6, 0x7f, 0x72, 0xde, 0x53, 0xfb, 0xef, 0xba, 0xff, 0x57, 0xe7, 0x63, 0x25, 0x8f, 0x92, 0xde, 0xff, 0xa7,
    0xf1, 0x8a, 0x3b, 0x5f, 0xa5, 0xed, 0xd8, 0xca, 0xc5, 0xa1, 0x59, 0x7f, 0x4e, 0x4c, 0x4d, 0x4b, 0xd0, 0x07, 0x68, 0x09,
    0x00, 0x00, 0x00, 0xf8, 0xe4, 0xdc, 0xcf, 0x34, 0x66, 0x4a, 0x62, 0x46, 0x35, 0x76, 0x53, 0x9f, 0x15, 0xa3, 0x5c, 0xeb,
    0xb4, 0xde, 0x68, 0x52, 0x63, 0xd9, 0xb0, 0x55, 0x73, 0xbf, 0x54, 0x33, 0x59, 0xad, 0xaf, 0x4c, 0x9e, 0xf7, 0x96, 0xe8,
    0x5d, 0xbb, 0xfa, 0xc0, 0xce, 0x98, 0xa2, 0xf9, 0x0c, 0x9c, 0x66, 0x0d, 0xf0, 0x54, 0x5f, 0x4b, 0xeb, 0x83, 0xa7, 0xb5,
    0xf9, 0xee, 0x58, 0xea, 0xe8, 0x33, 0xe9, 0x7a, 0x99, 0x89, 0x66, 0x95, 0xda, 0xdf, 0xd1, 0xef, 0xd3, 0xb5, 0x98, 0xcd,
    0x7c, 0x43, 0x73, 0x0c, 0x49, 0xfd, 0xce, 0x5d, 0x17, 0xd7, 0xc8, 0x21, 0xb6, 0x9e, 0xe3, 0xb7, 0xca, 0xfe, 0xcd, 0x3c,
    0x4f, 0x63, 0xbf, 0x55, 0x75, 0x34, 0xc7, 0x60, 0x5d, 0x88, 0xb3, 0x16, 0x6c, 0xd2, 0x9f, 0x13, 0x7d, 0x3b, 0xb9, 0xd6,
    0x69, 0x2e, 0xef, 0x58, 0xf8, 0x6c, 0xb7, 0x96, 0xbf, 0xff, 0x96, 0xff, 0x37, 0xee, 0x17, 0x5a, 0xd7, 0x99, 0xe6, 0x82,
    0x9c, 0x9a, 0xa7, 0x86, 0x5d, 0x1c, 0x7f, 0x76, 0x9e, 0x15, 0x99, 0xfa, 0xaa, 0xbb, 0xce, 0x71, 0x3a, 0xff, 0xdf, 0x3d,
    0x6e, 0xdd, 0x19, 0x83, 0x01, 0x00, 0x00, 0x00, 0x00, 0xfc, 0x95, 0xfc, 0x50, 0x1a, 0x67, 0x3b, 0xba, 0x02, 0x2d, 0xfe,
    0xcc, 0x3a, 0xa6, 0xb6, 0x4e, 0x41, 0x9b, 0xae, 0xd5, 0x2d, 0x93, 0x9a, 0x54, 0xe5, 0xb3, 0x54, 0xd7, 0x54, 0xb5, 0xa6,
    0xe6, 0xba, 0x3a, 0x47, 0x87, 0x52, 0xdf, 0x81, 0x70, 0x98, 0xf5, 0xcf, 0x6a, 0xfe, 0x3c, 0x59, 0x2b, 0x99, 0xe8, 0x96,
    0xad, 0x67, 0x40, 0x25, 0xef, 0x40, 0x53, 0xaf, 0xb1, 0x99, 0x33, 0x49, 0xf4, 0x4e, 0xf7, 0x79, 0x92, 0x49, 0x1b, 0x4d,
    0x73, 0xb6, 0xbf, 0x65, 0xff, 0xc6, 0xf3, 0xd8, 0xda, 0xeb, 0xec, 0x5a, 0xf6, 0x77, 0xf2, 0x41, 0xab, 0xed, 0x9f, 0xbe,
    0x37, 0xe7, 0x13, 0xfd, 0x7f, 0x97, 0xfd, 0x5b, 0xeb, 0x84, 0x57, 0xb5, 0xf3, 0x61, 0xbe, 0x0f, 0xf3, 0x18, 0xbc, 0xc7,
    0x2b, 0x99, 0x77, 0xd4, 0x77, 0x1c, 0xa6, 0xf3, 0x61, 0x5a, 0x47, 0x76, 0x04, 0xef, 0xdf, 0x4c, 0xda, 0x27, 0xcd, 0x6d,
    0x39, 0x39, 0xe4, 0xab, 0x1c, 0xdd, 0xb4, 0x9e, 0x65, 0x65, 0xfd, 0xc3, 0x13, 0xee, 0xc5, 0x9f, 0x9e, 0x4b, 0xfb, 0xab,
    0xb6, 0x4f, 0xc6, 0x49, 0x94, 0x01, 0x00, 0x00, 0x80, 0xe7, 0xdd, 0x1b, 0x40, 0xdf, 0xe6, 0x93, 0xf8, 0x84, 0xe7, 0x1b,
    0xdc, 0xdf, 0xdf, 0xa7, 0xf5, 0x98, 0x6a, 0x1c, 0x0c, 0x59, 0x7e, 0x77, 0xf2, 0xff, 0x46, 0xde, 0xe7, 0x30, 0xdf, 0x7d,
    0x8d, 0x05, 0xd7, 0x8d, 0xcf, 0xaa, 0x1e, 0x9e, 0xea, 0xc0, 0x87, 0x58, 0xf7, 0x7e, 0xf6, 0xee, 0x10, 0xac, 0xb7, 0xbe,
    0xce, 0xa3, 0xf9, 0xfe, 0xf5, 0xc9, 0xba, 0x42, 0xec, 0xff, 0x79, 0xfe, 0xef, 0x8e, 0x09, 0xcc, 0xff, 0xf7, 0x9a, 0xff,
    0xa7, 0xf5, 0x13, 0xd8, 0x9f, 0xf8, 0x9d, 0xf8, 0x8f, 0xfc, 0x10, 0xfa, 0x0f, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x3c, 0x85, 0x7f };

// Font characters rectangles data
static Rectangle fontRecs_Romulus[96] = {
    { 1, 1, 5 , 12 },
    { 7, 1, 2 , 12 },
    { 10, 1, 5 , 12 },
    { 16, 1, 7 , 12 },
    { 24, 1, 6 , 12 },
    { 31, 1, 8 , 12 },
    { 40, 1, 7 , 12 },
    { 48, 1, 2 , 12 },
    { 51, 1, 3 , 12 },
    { 55, 1, 3 , 12 },
    { 59, 1, 3 , 12 },
    { 63, 1, 6 , 12 },
    { 70, 1, 2 , 12 },
    { 73, 1, 4 , 12 },
    { 78, 1, 2 , 12 },
    { 81, 1, 8 , 12 },
    { 90, 1, 6 , 12 },
    { 97, 1, 4 , 12 },
    { 102, 1, 6 , 12 },
    { 109, 1, 6 , 12 },
    { 116, 1, 6 , 12 },
    { 1, 14, 6 , 12 },
    { 8, 14, 6 , 12 },
    { 15, 14, 6 , 12 },
    { 22, 14, 6 , 12 },
    { 29, 14, 6 , 12 },
    { 36, 14, 2 , 12 },
    { 39, 14, 2 , 12 },
    { 42, 14, 5 , 12 },
    { 48, 14, 6 , 12 },
    { 55, 14, 5 , 12 },
    { 61, 14, 6 , 12 },
    { 68, 14, 9 , 12 },
    { 78, 14, 6 , 12 },
    { 85, 14, 7 , 12 },
    { 93, 14, 7 , 12 },
    { 101, 14, 7 , 12 },
    { 109, 14, 7 , 12 },
    { 117, 14, 7 , 12 },
    { 1, 27, 7 , 12 },
    { 9, 27, 8 , 12 },
    { 18, 27, 4 , 12 },
    { 23, 27, 6 , 12 },
    { 30, 27, 8 , 12 },
    { 39, 27, 6 , 12 },
    { 46, 27, 10 , 12 },
    { 57, 27, 9 , 12 },
    { 67, 27, 7 , 12 },
    { 75, 27, 7 , 12 },
    { 83, 27, 7 , 12 },
    { 91, 27, 8 , 12 },
    { 100, 27, 6 , 12 },
    { 107, 27, 6 , 12 },
    { 114, 27, 9 , 12 },
    { 1, 40, 9 , 12 },
    { 11, 40, 10 , 12 },
    { 22, 40, 8 , 12 },
    { 31, 40, 8 , 12 },
    { 40, 40, 6 , 12 },
    { 47, 40, 3 , 12 },
    { 51, 40, 8 , 12 },
    { 60, 40, 3 , 12 },
    { 64, 40, 7 , 12 },
    { 72, 40, 6 , 12 },
    { 79, 40, 3 , 12 },
    { 83, 40, 7 , 12 },
    { 91, 40, 7 , 12 },
    { 99, 40, 5 , 12 },
    { 105, 40, 7 , 12 },
    { 113, 40, 6 , 12 },
    { 120, 40, 5 , 12 },
    { 1, 53, 7 , 12 },
    { 9, 53, 7 , 12 },
    { 17, 53, 4 , 12 },
    { 22, 53, 3 , 12 },
    { 26, 53, 7 , 12 },
    { 34, 53, 4 , 12 },
    { 39, 53, 9 , 12 },
    { 49, 53, 8 , 12 },
    { 58, 53, 6 , 12 },
    { 65, 53, 7 , 12 },
    { 73, 53, 7 , 12 },
    { 81, 53, 6 , 12 },
    { 88, 53, 5 , 12 },
    { 94, 53, 4 , 12 },
    { 99, 53, 7 , 12 },
    { 107, 53, 7 , 12 },
    { 115, 53, 9 , 12 },
    { 1, 66, 7 , 12 },
    { 9, 66, 7 , 12 },
    { 17, 66, 6 , 12 },
    { 24, 66, 4 , 12 },
    { 29, 66, 2 , 12 },
    { 32, 66, 4 , 12 },
    { 37, 66, 6 , 12 },
    { 44, 66, 5 , 12 },
};

// Font glyphs info data
// NOTE: No glyphs.image data provided
static GlyphInfo fontGlyphs_Romulus[96] = {
    { 32, 0, 0, 0, { 0 }},
    { 33, 0, 0, 0, { 0 }},
    { 34, 0, 0, 0, { 0 }},
    { 35, 0, 0, 0, { 0 }},
    { 36, 0, 0, 0, { 0 }},
    { 37, 0, 0, 0, { 0 }},
    { 38, 0, 0, 0, { 0 }},
    { 39, 0, 0, 0, { 0 }},
    { 40, 0, 0, 0, { 0 }},
    { 41, 0, 0, 0, { 0 }},
    { 42, 0, 0, 0, { 0 }},
    { 43, 0, 0, 0, { 0 }},
    { 44, 0, 0, 0, { 0 }},
    { 45, 0, 0, 0, { 0 }},
    { 46, 0, 0, 0, { 0 }},
    { 47, 0, 0, 0, { 0 }},
    { 48, 0, 0, 0, { 0 }},
    { 49, 0, 0, 0, { 0 }},
    { 50, 0, 0, 0, { 0 }},
    { 51, 0, 0, 0, { 0 }},
    { 52, 0, 0, 0, { 0 }},
    { 53, 0, 0, 0, { 0 }},
    { 54, 0, 0, 0, { 0 }},
    { 55, 0, 0, 0, { 0 }},
    { 56, 0, 0, 0, { 0 }},
    { 57, 0, 0, 0, { 0 }},
    { 58, 0, 0, 0, { 0 }},
    { 59, 0, 0, 0, { 0 }},
    { 60, 0, 0, 0, { 0 }},
    { 61, 0, 0, 0, { 0 }},
    { 62, 0, 0, 0, { 0 }},
    { 63, 0, 0, 0, { 0 }},
    { 64, 0, 0, 0, { 0 }},
    { 65, 0, 0, 0, { 0 }},
    { 66, 0, 0, 0, { 0 }},
    { 67, 0, 0, 0, { 0 }},
    { 68, 0, 0, 0, { 0 }},
    { 69, 0, 0, 0, { 0 }},
    { 70, 0, 0, 0, { 0 }},
    { 71, 0, 0, 0, { 0 }},
    { 72, 0, 0, 0, { 0 }},
    { 73, 0, 0, 0, { 0 }},
    { 74, 0, 0, 0, { 0 }},
    { 75, 0, 0, 0, { 0 }},
    { 76, 0, 0, 0, { 0 }},
    { 77, 0, 0, 0, { 0 }},
    { 78, 0, 0, 0, { 0 }},
    { 79, 0, 0, 0, { 0 }},
    { 80, 0, 0, 0, { 0 }},
    { 81, 0, 0, 0, { 0 }},
    { 82, 0, 0, 0, { 0 }},
    { 83, 0, 0, 0, { 0 }},
    { 84, 0, 0, 0, { 0 }},
    { 85, 0, 0, 0, { 0 }},
    { 86, 0, 0, 0, { 0 }},
    { 87, 0, 0, 0, { 0 }},
    { 88, 0, 0, 0, { 0 }},
    { 89, 0, 0, 0, { 0 }},
    { 90, 0, 0, 0, { 0 }},
    { 91, 0, 0, 0, { 0 }},
    { 92, 0, 0, 0, { 0 }},
    { 93, 0, 0, 0, { 0 }},
    { 94, 0, 0, 0, { 0 }},
    { 95, 0, 0, 0, { 0 }},
    { 96, 0, 0, 0, { 0 }},
    { 97, 0, 0, 0, { 0 }},
    { 98, 0, 0, 0, { 0 }},
    { 99, 0, 0, 0, { 0 }},
    { 100, 0, 0, 0, { 0 }},
    { 101, 0, 0, 0, { 0 }},
    { 102, 0, 0, 0, { 0 }},
    { 103, 0, 0, 0, { 0 }},
    { 104, 0, 0, 0, { 0 }},
    { 105, 0, 0, 0, { 0 }},
    { 106, 0, 0, 0, { 0 }},
    { 107, 0, 0, 0, { 0 }},
    { 108, 0, 0, 0, { 0 }},
    { 109, 0, 0, 0, { 0 }},
    { 110, 0, 0, 0, { 0 }},
    { 111, 0, 0, 0, { 0 }},
    { 112, 0, 0, 0, { 0 }},
    { 113, 0, 0, 0, { 0 }},
    { 114, 0, 0, 0, { 0 }},
    { 115, 0, 0, 0, { 0 }},
    { 116, 0, 0, 0, { 0 }},
    { 117, 0, 0, 0, { 0 }},
    { 118, 0, 0, 0, { 0 }},
    { 119, 0, 0, 0, { 0 }},
    { 120, 0, 0, 0, { 0 }},
    { 121, 0, 0, 0, { 0 }},
    { 122, 0, 0, 0, { 0 }},
    { 123, 0, 0, 0, { 0 }},
    { 124, 0, 0, 0, { 0 }},
    { 125, 0, 0, 0, { 0 }},
    { 126, 0, 0, 0, { 0 }},
    { 127, 0, 0, 0, { 0 }},
};

// Font loading function: Romulus
static Font LoadFont_Romulus(void)
{
    Font font = { 0 };

    font.baseSize = 12;
    font.glyphCount = 96;
    font.glyphPadding = 0;

    // Custom font loading
    // NOTE: Compressed font image data (DEFLATE), it requires DecompressData() function
    int fontDataSize_Romulus2 = 0;
    unsigned char *data = DecompressData(fontData_Romulus, COMPRESSED_DATA_SIZE_FONT_ROMULUS2, &fontDataSize_Romulus2);
    Image imFont = { data, 128, 128, 1, 7 };

    // Load texture from image
    font.texture = LoadTextureFromImage(imFont);
    UnloadImage(imFont);  // Uncompressed data can be unloaded from memory

    // Assign glyph recs and info data directly
    // WARNING: This font data must not be unloaded
    font.recs = fontRecs_Romulus;
    font.glyphs = fontGlyphs_Romulus;

    return font;
}
